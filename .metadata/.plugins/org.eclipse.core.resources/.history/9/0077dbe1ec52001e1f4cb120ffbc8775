/*
 * MiniProject2.c
 *
 *  Created on: Sep 13, 2023
 *      Author: adham
 */

#include <avr/io.h>
#include <avr/interrupt.h>

unsigned char currentDigit = 0;
unsigned char secondCounter =0;

ISR(TIMER2_COMP_vect) {
	PORTA = (PORTA & 0xC0) | (1 << currentDigit);
	switch (currentDigit) {
		case 0:
			PORTC = (PORTC&0xF0)|(secondCounter&0x0F);
			break;
		default:
			PORTC = (PORTC&0xF0);
			break;
	}
	currentDigit++;
	if (currentDigit > 5)
		currentDigit = 0;

}

ISR(TIMER1_COMPA_vect) {
	PORTB ^= (1 << PB0);
	secondCounter = (secondCounter&0xF0)|((secondCounter&0x0F)+1);
}
int main(void) {
	//Init the Output ports
	DDRA |= 0x3F;
	PORTA &= ~(0x3F);
	DDRC |= 0x0F;
	PORTC &= ~(0x0F);
	DDRB |= (1 << PB0);
	PORTB &= ~(1 << PB0);
	// init the timer2
	TCCR2 = (1 << FOC2) | (1 << WGM21) | (1 << CS21);
	TCNT2 = 0;
	TIMSK |= (1 << OCIE2);
	OCR2 = 250;
	SREG |= 1 << 7;
	// init timer1
	TCNT1 = 0; // initial value of timer register
	OCR1A = 15625;
	TIMSK |= (1 << OCIE1A); //enable compare interrupt
	TCCR1A |= (1<<FOC1A);  //force compare match
	TCCR1B |= (1 << WGM12); //CTC (clear timer on compare mode)(WGM12 =1, WGM10,11,13 =0)
	TCCR1B |= (1 << CS11)|(1<<CS10);   //F/CPU = 1024 CS12=1 CS11=0 CS10=1

	while (1)
		;

}
